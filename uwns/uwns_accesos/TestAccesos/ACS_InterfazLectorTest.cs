// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using System.Collections;
using System.Xml;
using HCOMHEPSLib;
namespace TestAccesos
{
      /// <summary>
      ///This is a test class for ConsoleApplication1.ACS_InterfazLector and is intended
      ///to contain all ConsoleApplication1.ACS_InterfazLector Unit Tests
      ///</summary>
      [TestClass()]
      public class ACS_InterfazLectorTest
      {


            private TestContext testContextInstance;

            /// <summary>
            ///Gets or sets the test context which provides
            ///information about and functionality for the current test run.
            ///</summary>
            public TestContext TestContext
            {
                  get
                  {
                        return testContextInstance;
                  }
                  set
                  {
                        testContextInstance = value;
                  }
            }
            #region Additional test attributes
            // 
            //You can use the following additional attributes as you write your tests:
            //
            //Use ClassInitialize to run code before running the first test in the class
            //
            //[ClassInitialize()]
            //public static void MyClassInitialize(TestContext testContext)
            //{
            //}
            //
            //Use ClassCleanup to run code after all tests in a class have run
            //
            //[ClassCleanup()]
            //public static void MyClassCleanup()
            //{
            //}
            //
            //Use TestInitialize to run code before running each test
            //
            //[TestInitialize()]
            //public void MyTestInitialize()
            //{
            //}
            //
            //Use TestCleanup to run code after each test has run
            //
            //[TestCleanup()]
            //public void MyTestCleanup()
            //{
            //}
            //
            #endregion


            /// <summary>
            ///A test for ProcesarTrama (string)
            ///</summary>
            [DeploymentItem("ACCESOS.exe")]
            [TestMethod()]
            public void ProcesarTramaTest()
            {
                  TestAccesos.ConsoleApplication1_ACS_SincronizaLecturaAccessor Obj_Sinc = null; // TODO: Initialize to an appropriate value

                  Hashtable Arr_Pto = null; // TODO: Initialize to an appropriate value

                  XmlDocument listFormatoBoarding = null; // TODO: Initialize to an appropriate value

                  CajaClass Obj_PinPad = null; // TODO: Initialize to an appropriate value

                  System.Collections.Generic.List<LAP.TUUA.ENTIDADES.Compania> Lst_Compania = null; // TODO: Initialize to an appropriate value

                  System.Collections.Generic.List<LAP.TUUA.ENTIDADES.ListaDeCampo> Lst_ListaDeCampo = null; // TODO: Initialize to an appropriate value

                  TestAccesos.ConsoleApplication1_ACS_InterfazPinPadAccessor Obj_IntzPinPad = null; // TODO: Initialize to an appropriate value

                  object target = TestAccesos.ConsoleApplication1_ACS_InterfazLectorAccessor.CreatePrivate(Obj_Sinc, Arr_Pto, listFormatoBoarding, Obj_PinPad, Lst_Compania, Lst_ListaDeCampo, Obj_IntzPinPad);

                  TestAccesos.ConsoleApplication1_ACS_InterfazLectorAccessor accessor = new TestAccesos.ConsoleApplication1_ACS_InterfazLectorAccessor(target);

                  string strTrama = null; // TODO: Initialize to an appropriate value

                  int expected = 0;
                  int actual;

                  actual = accessor.ProcesarTrama(strTrama);

                  Assert.AreEqual(1, actual);
                  Assert.AreEqual("AA", accessor.Obj_BoardingBcbp.SCodCompania);
            }

      }


}
